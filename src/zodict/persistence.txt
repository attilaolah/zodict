
Zodict Persistence Tests
========================

    >>> import ZODB

    >>> from ZODB.FileStorage import FileStorage
    >>> from ZODB.DB import DB
    >>> storage = FileStorage('Data.fs')
    >>> db = DB(storage)
    >>> connection = db.open()
    >>> root = connection.root()

    >>> from zodict import Node
    >>> anode = Node('anode')
    >>> anode
    <Node object 'anode' at ...>
    
    >>> root[anode.__name__] = anode
    >>> root
    {'anode': <Node object 'anode' at ...>}

    >>> import transaction
    >>> transaction.commit()
    >>> root.keys()
    ['anode']

    >>> interact( locals() )

    >>> import persistent
    >>> class PersistentNode(Node, persistent.Persistent):
    ...     pass
    Traceback (most recent call last):
      File "<console>", line 1, in <module>
    TypeError: Error when calling the metaclass bases
        multiple bases have instance lay-out conflict

### why?
# http://objectmix.com/python/754338-re-when-do-i-get-multiple-bases-have-instance-lay-out-conflict-error.html
# http://stackoverflow.com/questions/309129/why-cant-i-inherit-from-dict-and-exception-in-python
